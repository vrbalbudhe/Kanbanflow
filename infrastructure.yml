AWSTemplateFormatVersion: "2010-09-09"
Description: Sets up EC2 Instance, Security Group, and IAM Role for MERN ToDo App deployment.

Parameters:
  KeyPairName:
    Description: Name of an existing EC2 KeyPair to enable SSH access
    Type: AWS::EC2::KeyPair::KeyName

  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t3.micro

  AmiId:
    Description: AMI ID for Amazon Linux 2 (find latest for your region)
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

  SshLocation:
    Description: IP address range that can SSH into EC2
    Type: String
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID for deployment

  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Public subnet in the VPC

  AppPort:
    Description: Port the Node.js application listens on
    Type: Number
    Default: 8000

Resources:
  MernAppEC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      Policies:
        - PolicyName: SSMParameterStoreReadOnly
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: ssm:GetParameters
                Resource:
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/mern-app/prod/*
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/mern-todo-app/*
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/kbf/*

  MernAppInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref MernAppEC2Role

  MernAppSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH, HTTP, and custom app port
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SshLocation
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: !Ref AppPort
          ToPort: !Ref AppPort
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: MernAppSG

  MernAppInstance:
    Type: AWS::EC2::Instance
    DependsOn: MernAppInstanceProfile
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyPairName
      ImageId: !Ref AmiId
      IamInstanceProfile: !Ref MernAppInstanceProfile
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          GroupSet:
            - !Ref MernAppSG
          SubnetId: !Ref SubnetId
      Tags:
        - Key: Name
          Value: MernAppServer-CFN
        - Key: Deploy
          Value: mern-todo-app
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install ruby wget unzip -y

          # Install CodeDeploy Agent
          cd /home/ec2-user
          wget https://aws-codedeploy-${AWS::Region}.s3.${AWS::Region}.amazonaws.com/latest/install
          chmod +x ./install
          ./install auto

          # Install NVM, Node.js 16, and PM2 (as root)
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
          export NVM_DIR="/root/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          nvm install 16
          nvm use 16
          nvm alias default 16
          npm install -g pm2

          # Install AWS CLI v2
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          ./aws/install
          rm -rf aws awscliv2.zip

          # Start CodeDeploy Agent
          service codedeploy-agent start
          chkconfig codedeploy-agent on

Outputs:
  InstanceId:
    Description: Instance ID of the EC2
    Value: !Ref MernAppInstance

  PublicIp:
    Description: Public IP of the EC2
    Value: !GetAtt MernAppInstance.PublicIp

  PublicDnsName:
    Description: Public DNS of the EC2
    Value: !GetAtt MernAppInstance.PublicDnsName
